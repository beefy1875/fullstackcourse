{"ast":null,"code":"var _jsxFileName = \"/home/fred/Documents/fullstackcourse/part1/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    children: props.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n};\n_c = Button;\nconst Statistics = props => {\n  const good = props.good;\n  const neutral = props.neutral;\n  const bad = props.bad;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"good \", good, \"neutral \", neutral]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [average, setAverage] = useState(0);\n  const [positive, setPositive] = useState(0);\n  const addGood = () => {\n    setGood(good + 1);\n    setTotal(total + 1);\n    setAverage((good - bad) / total);\n    setPositive(good / total * 100);\n  };\n  const addNeutral = () => {\n    setNeutral(neutral + 1);\n    setTotal(total + 1);\n  };\n  const addBad = () => {\n    setBad(bad + 1);\n    setTotal(total + 1);\n    setAverage((good - bad) / total);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addGood,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNeutral,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addBad,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", positive, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"AX/8zGHXpeevkNnfTHvjlbddOQU=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","Button","props","name","Statistics","good","neutral","bad","App","setGood","setNeutral","setBad","total","setTotal","average","setAverage","positive","setPositive","addGood","addNeutral","addBad"],"sources":["/home/fred/Documents/fullstackcourse/part1/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = (props) => {\n  return <button>{props.name}</button>\n}\n\nconst Statistics = (props) => {\n  const good=props.good\n  const neutral=props.neutral\n  const bad=props.bad\n  return (\n    <div>\n      good {good}\n      neutral {neutral}\n    </div>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [total, setTotal] = useState(0)\n  const [average, setAverage] = useState(0)\n  const [positive, setPositive] = useState(0)\n\n  const addGood = () => {\n    setGood(good + 1)\n    setTotal(total + 1)\n    setAverage((good - bad) / total)\n    setPositive(good/total*100)\n  }\n\n  const addNeutral = () => {\n    setNeutral(neutral + 1)\n    setTotal(total + 1)\n  }\n\n  const addBad = () => {\n    setBad(bad + 1)\n    setTotal(total + 1)\n    setAverage((good - bad) / total)\n  }\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <button onClick={addGood}>good</button>\n      <button onClick={addNeutral}>neutral</button>\n      <button onClick={addBad}>bad</button>\n      <h1>statistics</h1>\n      <Statistics good={good} bad={bad} neutral={neutral} />\n      <p>good {good}</p>\n      <p>neutral {neutral}</p>\n      <p>bad {bad}</p>\n      <p>all {total}</p>\n      <p>average {average}</p>\n      <p>positive {positive}%</p>\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA;AAEhC,MAAMC,MAAM,GAAIC,KAAK,IAAK;EACxB,oBAAO;IAAA,UAASA,KAAK,CAACC;EAAI;IAAA;IAAA;IAAA;EAAA,QAAU;AACtC,CAAC;AAAA,KAFKF,MAAM;AAIZ,MAAMG,UAAU,GAAIF,KAAK,IAAK;EAC5B,MAAMG,IAAI,GAACH,KAAK,CAACG,IAAI;EACrB,MAAMC,OAAO,GAACJ,KAAK,CAACI,OAAO;EAC3B,MAAMC,GAAG,GAACL,KAAK,CAACK,GAAG;EACnB,oBACE;IAAA,oBACQF,IAAI,cACDC,OAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACZ;AAEV,CAAC;AAAA,MAVKF,UAAU;AAYhB,MAAMI,GAAG,GAAG,MAAM;EAAA;EAChB;EACA,MAAM,CAACH,IAAI,EAAEI,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACM,OAAO,EAAEI,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACO,GAAG,EAAEI,MAAM,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAE3C,MAAMkB,OAAO,GAAG,MAAM;IACpBT,OAAO,CAACJ,IAAI,GAAG,CAAC,CAAC;IACjBQ,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACnBG,UAAU,CAAC,CAACV,IAAI,GAAGE,GAAG,IAAIK,KAAK,CAAC;IAChCK,WAAW,CAACZ,IAAI,GAACO,KAAK,GAAC,GAAG,CAAC;EAC7B,CAAC;EAED,MAAMO,UAAU,GAAG,MAAM;IACvBT,UAAU,CAACJ,OAAO,GAAG,CAAC,CAAC;IACvBO,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EAED,MAAMQ,MAAM,GAAG,MAAM;IACnBT,MAAM,CAACJ,GAAG,GAAG,CAAC,CAAC;IACfM,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACnBG,UAAU,CAAC,CAACV,IAAI,GAAGE,GAAG,IAAIK,KAAK,CAAC;EAClC,CAAC;EAED,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eACtB;MAAQ,OAAO,EAAEM,OAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eACvC;MAAQ,OAAO,EAAEC,UAAW;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB,eAC7C;MAAQ,OAAO,EAAEC,MAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eACrC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB,eACnB,QAAC,UAAU;MAAC,IAAI,EAAEf,IAAK;MAAC,GAAG,EAAEE,GAAI;MAAC,OAAO,EAAED;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eACtD;MAAA,oBAASD,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB;MAAA,uBAAYC,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACxB;MAAA,mBAAQC,GAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAChB;MAAA,mBAAQK,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB;MAAA,uBAAYE,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACxB;MAAA,wBAAaE,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACvB;AAEV,CAAC;AAAA,GA3CKR,GAAG;AAAA,MAAHA,GAAG;AA6CT,eAAeA,GAAG;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}